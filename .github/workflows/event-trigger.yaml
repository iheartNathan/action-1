name: Exploring Event Triggers

on:
    workflow_dispatch: 
    # schedule:
    #   - cron: "* * * * *"
    push:


env:
    CONTAINER_REGISTRY: docker.io
    # DOCKER_USERNAME: siddharth1
    IMAGE_NAME: github-actions-nginx

jobs:
################ environment variables at JOB level ################
  docker:
    runs-on: ubuntu-latest
    steps:
        - name: Docker Build
          run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

        - name: Docker Login
          env:
            DOCKER_PASSWORD: s3CurePaSsW0rd
          run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Publish
          run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

  deploy:
        if: github.ref == 'refs/heads/main'
        needs: docker
        concurrency: 
            cancel-in-progress: false
            group: production-deployment
        runs-on: ubuntu-latest
        steps:
            - name: Docker Run
              timeout-minutes: 1
              run: |
                echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
                sleep 6000s
#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Build
#         run: docker build -t docker.io/dockerUsername/imageName:latest

#       - name: Docker Login
#         run: docker login --username=dockerUsername --password=s3cUrePaSsW0rd

#       - name: Docker Publish
#         run: docker push docker.io/dockerUsername/imageName:latest

#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Run
#         run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

############ environment variables at STEP level ############

#   docker:
#     runs-on: ubuntu-latest
#     steps:
#         - name: Docker Build
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

#         - name: Docker Login
#           env:
#             DOCKER_PASSWORD: s3CurePaSsW0rd
#             DOCKER_USERNAME: siddharth1
#           run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=$DOCKER_PASSWORD

#         - name: Docker Publish
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

#   deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#             - name: Docker Run
#               env:
#                 CONTAINER_REGISTRY: docker.io
#                 DOCKER_USERNAME: siddharth1
#                 IMAGE_NAME: github-actions-nginx
#               run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest


